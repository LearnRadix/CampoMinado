#include<stdio.h>
#include<stdlib.h>

  //VARIAVEIS GLOBAIS
  //A VARIAVEL CAMPO REPRESENTA A INTERFACE DO CAMPO MINADO, O CAMPO QUE � MOSTRADO AO USU�RIO
  //A VARIAVEL OP, REPRESENTA A MATRIZ DE OPERA��ES, REPRESENTA��ES DAS BOMBAS, DICAS E ESPA�OS VAZIOS DO CAMPO MINADO
  //COUNTBOMBAS TEM COMO VALOR DE CADA POSI��O, A DICA DE UMA DETERMINADA POSI��O NA MATRIZ OP
  //ESPACOSFREE REPRESENTA QUANTOS ESPA�OS JA FORAM ABERTOS, SE BATER 75, O USUARIO VENCE O JOGO
  int campo[10][10], op[10][10], countbombas[100], espacosfree = 0;
  //VARIAVEIS UTILIZADAS NAS FUN��ES DE THREADS, MUTEX_BOMBA � A REGI�O CRITICA E A BOMBA_ID AS THREADS
  pthread_mutex_t mutex_bomba[25];
  pthread_t bomba_id[25];

  //FUN��O QUE RECEBE COMO PARAMETRO UMA POSI��O NA MATRIZ DE OPERA��O E ANALISA SE O VALOR � -1, QUE REPRESENTA
  //A BOMBA, CASO SIM, RETORNA 1, CASO N�O, RETORNA 0;
  int verificaBomba(int linha, int coluna);

  //IMPRIME A MATRIZ DE INTERFACE EM SEU ESTADO INICIAL, OU SEJA, O CAMPO MINADO INICIAL
  void imprime_inicio();

  //FUN��O QUE BLOQUEIA O ACESSO � REGI�O CRITICA
  void gerando(int * bomba);

  //FUN��O QUE LIBERA O ACESSO � REGI�O CR�TICA
  void acabou_gerar(int * bomba);

  //FUN��O QUE UTILIZA THREADS PARA GERAR 25 BOMBAS SIMUTANEAMENTE
  void * gera_bombas(void *var);

  //FUN��O QUE ANALISA AONDE TEM BOMBAS NA MATRIZ DE OPERA��O E COLOCA AS DICAS AO REDOR DELAS
  void gera_dicas(void);

  //FUN��O QUE ATUALIZA A MATRIZ DE OPERA��O J� COM AS DICAS E AS BOMBAS ADICIONADAS
  void atualiza_op(void);

  //FUN��O RECURSIVA QUE LIBERA OS ESPA�OS VAZIOS INTERLIGADOS AT� ENCONTRAR UMA DICA
  void libera_vazio(int auxi, int auxj);

  //FUN��O DA JOGADA DO USU�RIO, VERIFICA O QUE O USU�RIO ACERTOU, SE FOI UMA BOMBA, UM ESPA�O VAZIO OU UMA DICA, E DEFINE
  //SE ELE PERDEU OU VENCEU O JOGO
  void verifica_vizinhanca();

  int verifica_posicao(int i, int j);
